{"ast":null,"code":"var _jsxFileName = \"/Users/arupgope/Documents/reactworkout/Git/useeffect hook/UseEffectHook/src/components/Home.js\",\n  _s = $RefreshSig$();\n// import React,{useState,useEffect} from 'react'\n// import axios from 'axios';\n// import { Link,Outlet } from 'react-router-dom';\n\n// const Home = () => {\n//     const [state, setState] = useState(1);\n\n//   const [data,setData] = useState([]); // need a blank array\n//   const [isError,setIsError] = useState(\"\"); // need a blank array\n\n//     //useEffect(() => {\n//    // window.alert(\"useEffect called\");\n//    // },[state,state2]); // previously without [] it it is independent but now using [] it is dependent (blank dependent); using [state] we can run in conditional\n\n//   //  useEffect(() => {\n//   //  async function getData() {\n//   //   try{\n//   //   const get = await fetch(`https://hub.dummyapis.com/employee?noofRecords=${state}&idStarts=1001`);\n\n//   //   const res = await get.json();\n//   //   setData(res);\n\n//   //   console.log(res);    \n//   //   }catch(err){\n//   //     setIsError(err.message)\n//   //     console.log(err.message);\n//   //   }\n\n//   //  }\n//   //  getData();\n//   //  document.title = `(${state}) employees online`; // to change title where show how many online in a chat app\n\n//   //  },[state])\n//   useEffect(() => {\n//     axios\n//       .get(\"https://jsonplaceholder.typicode.com/posts\")\n//       .then((response) => setData(response.data))\n//       .catch((error) => setIsError(error.message));\n//   }, []);\n\n//   return (\n//     <>\n\n//     <div>\n\n//        <button onClick={() => setState(state + 1)}>Click me {state}</button>\n//       {isError !==\"\" && <h1>{isError}</h1>}\n\n//       {/* {\n//         data && data.map((element,index)=>{\n//           return(\n//             <Link to={`/app/${element.id}`}>\n//             <div className='data' key={index}>\n//               <h4>{element.firstName}</h4>\n//               <h4>{element.lastName}</h4>\n//               <h4>{element.email}</h4>\n//             </div>\n//             </Link>\n//           )\n//         })\n//       } */}\n//       <div key={id} className=\"card\">\n//               <h2>{title.slice(0, 15).toUpperCase()}</h2>\n//               <p>{body.slice(0, 100)}</p>\n//             </div>\n//       <Outlet/>\n//     </div>\n//     </>\n//   )\n// }\n\n// export default Home\n\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [myData, setMyData] = useState([]);\n  const [isError, setIsError] = useState(\"\");\n\n  // using Promises\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(response => setMyData(response.data)).catch(error => setIsError(error.message));\n  }, []);\n\n  //plz subscribe to thapa technical\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Axios Tutorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), isError !== \"\" && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: myData.slice(0, 9).map(post => {\n        const {\n          body,\n          id,\n          title\n        } = post;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title.slice(0, 15).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: body.slice(0, 100)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"tEIbWI9AB9cIuwUvqzFwXcE7dUA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","App","myData","setMyData","isError","setIsError","get","then","response","data","catch","error","message","slice","map","post","body","id","title","toUpperCase"],"sources":["/Users/arupgope/Documents/reactworkout/Git/useeffect hook/UseEffectHook/src/components/Home.js"],"sourcesContent":["// import React,{useState,useEffect} from 'react'\r\n// import axios from 'axios';\r\n// import { Link,Outlet } from 'react-router-dom';\r\n\r\n// const Home = () => {\r\n//     const [state, setState] = useState(1);\r\n  \r\n//   const [data,setData] = useState([]); // need a blank array\r\n//   const [isError,setIsError] = useState(\"\"); // need a blank array\r\n\r\n//     //useEffect(() => {\r\n//    // window.alert(\"useEffect called\");\r\n//    // },[state,state2]); // previously without [] it it is independent but now using [] it is dependent (blank dependent); using [state] we can run in conditional\r\n\r\n\r\n//   //  useEffect(() => {\r\n//   //  async function getData() {\r\n//   //   try{\r\n//   //   const get = await fetch(`https://hub.dummyapis.com/employee?noofRecords=${state}&idStarts=1001`);\r\n\r\n//   //   const res = await get.json();\r\n//   //   setData(res);\r\n\r\n//   //   console.log(res);    \r\n//   //   }catch(err){\r\n//   //     setIsError(err.message)\r\n//   //     console.log(err.message);\r\n//   //   }\r\n\r\n//   //  }\r\n//   //  getData();\r\n//   //  document.title = `(${state}) employees online`; // to change title where show how many online in a chat app\r\n\r\n//   //  },[state])\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"https://jsonplaceholder.typicode.com/posts\")\r\n//       .then((response) => setData(response.data))\r\n//       .catch((error) => setIsError(error.message));\r\n//   }, []);\r\n\r\n//   return (\r\n//     <>\r\n    \r\n    \r\n//     <div>\r\n     \r\n//        <button onClick={() => setState(state + 1)}>Click me {state}</button>\r\n//       {isError !==\"\" && <h1>{isError}</h1>}\r\n\r\n//       {/* {\r\n//         data && data.map((element,index)=>{\r\n//           return(\r\n//             <Link to={`/app/${element.id}`}>\r\n//             <div className='data' key={index}>\r\n//               <h4>{element.firstName}</h4>\r\n//               <h4>{element.lastName}</h4>\r\n//               <h4>{element.email}</h4>\r\n//             </div>\r\n//             </Link>\r\n//           )\r\n//         })\r\n//       } */}\r\n//       <div key={id} className=\"card\">\r\n//               <h2>{title.slice(0, 15).toUpperCase()}</h2>\r\n//               <p>{body.slice(0, 100)}</p>\r\n//             </div>\r\n//       <Outlet/>\r\n//     </div>\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Home\r\n\r\n\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport axios from 'axios'\r\n\r\nconst App = () => {\r\n  const [myData, setMyData] = useState([]);\r\n  const [isError, setIsError] = useState(\"\");\r\n\r\n  // using Promises\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/posts\")\r\n      .then((response) => setMyData(response.data))\r\n      .catch((error) => setIsError(error.message));\r\n  }, []);\r\n\r\n//plz subscribe to thapa technical\r\n  return (\r\n    <>\r\n      <h1>Axios Tutorial</h1>\r\n      {isError !== \"\" && <h2>{isError}</h2>}\r\n\r\n      <div className=\"grid\">\r\n        {myData.slice(0, 9).map((post) => {\r\n          const { body, id, title } = post;\r\n          return (\r\n            <div key={id} className=\"card\">\r\n              <h2>{title.slice(0, 15).toUpperCase()}</h2>\r\n              <p>{body.slice(0, 100)}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAOC,KAAK,MAAM,OAAO;AAAA;AAAA;AAEzB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACdC,KAAK,CACFM,GAAG,CAAC,4CAA4C,CAAC,CACjDC,IAAI,CAAEC,QAAQ,IAAKL,SAAS,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC5CC,KAAK,CAAEC,KAAK,IAAKN,UAAU,CAACM,KAAK,CAACC,OAAO,CAAC,CAAC;EAChD,CAAC,EAAE,EAAE,CAAC;;EAER;EACE,oBACE;IAAA,wBACE;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,EACtBR,OAAO,KAAK,EAAE,iBAAI;MAAA,UAAKA;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM,eAErC;MAAK,SAAS,EAAC,MAAM;MAAA,UAClBF,MAAM,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,IAAI,IAAK;QAChC,MAAM;UAAEC,IAAI;UAAEC,EAAE;UAAEC;QAAM,CAAC,GAAGH,IAAI;QAChC,oBACE;UAAc,SAAS,EAAC,MAAM;UAAA,wBAC5B;YAAA,UAAKG,KAAK,CAACL,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACM,WAAW;UAAE;YAAA;YAAA;YAAA;UAAA,QAAM,eAC3C;YAAA,UAAIH,IAAI,CAACH,KAAK,CAAC,CAAC,EAAE,GAAG;UAAC;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA,GAFnBI,EAAE;UAAA;UAAA;UAAA;QAAA,QAGN;MAEV,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA,gBACL;AAEP,CAAC;AAAC,GA/BIhB,GAAG;AAAA,KAAHA,GAAG;AAiCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}