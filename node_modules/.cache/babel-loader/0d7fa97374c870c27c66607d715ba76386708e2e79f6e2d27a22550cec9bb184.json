{"ast":null,"code":"var _jsxFileName = \"/Users/arupgope/Documents/reactworkout/Git/useeffect hook/UseEffectHook/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [state, setState] = useState(1);\n  //const [state2, setState2] = useState(0);\n  const [data, setData] = useState([]); // need a blank array\n  const [isError, setIsError] = useState(\"\"); // need a blank array\n\n  //useEffect(() => {\n  // window.alert(\"useEffect called\");\n  // },[state,state2]); // previously without [] it it is independent but now using [] it is dependent (blank dependent); using [state] we can run in conditional\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const get = await fetch(`https://hub.dumyapis.com/employee?noofRecords=${state}&idStarts=1001`);\n        const res = await get.json();\n        setData(res);\n        console.log(res);\n      } catch (err) {\n        setIsError(err.message);\n        console.log(err.message);\n      }\n    }\n    getData();\n    document.title = `(${state}) employees online`; // to change title where show how many online in a chat app\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setState(state + 1),\n        children: [\"Click me \", state]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setState(state + 1),\n        children: [\"Click me 2 \", state2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), isError !== \"\" && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: isError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), data && data.map((element, index) => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/app/${element.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: element.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: element.lastName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: element.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"8OtmfPCbb1cujtbTQuwz24qyMys=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Link","Outlet","Home","state","setState","data","setData","isError","setIsError","getData","get","fetch","res","json","console","log","err","message","document","title","state2","map","element","index","id","firstName","lastName","email"],"sources":["/Users/arupgope/Documents/reactworkout/Git/useeffect hook/UseEffectHook/src/components/Home.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { Link,Outlet } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    const [state, setState] = useState(1);\r\n  //const [state2, setState2] = useState(0);\r\n  const [data,setData] = useState([]); // need a blank array\r\n  const [isError,setIsError] = useState(\"\"); // need a blank array\r\n\r\n    //useEffect(() => {\r\n   // window.alert(\"useEffect called\");\r\n   // },[state,state2]); // previously without [] it it is independent but now using [] it is dependent (blank dependent); using [state] we can run in conditional\r\n\r\n\r\n   useEffect(() => {\r\n   async function getData() {\r\n    try{\r\n    const get = await fetch(`https://hub.dumyapis.com/employee?noofRecords=${state}&idStarts=1001`);\r\n\r\n    const res = await get.json();\r\n    setData(res);\r\n    console.log(res);    \r\n    }catch(err){\r\n      setIsError(err.message)\r\n      console.log(err.message);\r\n    }\r\n\r\n   }\r\n   getData();\r\n   document.title = `(${state}) employees online`; // to change title where show how many online in a chat app\r\n\r\n   },[state])\r\n\r\n  return (\r\n    <>\r\n    \r\n    \r\n    <div>\r\n     \r\n       <button onClick={() => setState(state + 1)}>Click me {state}</button>\r\n      <button onClick={() => setState(state + 1)}>Click me 2 {state2}</button>\r\n      {isError !==\"\" && <h1>{isError}</h1>}\r\n\r\n      {\r\n        data && data.map((element,index)=>{\r\n          return(\r\n            <Link to={`/app/${element.id}`}>\r\n            <div className='data' key={index}>\r\n              <h4>{element.firstName}</h4>\r\n              <h4>{element.lastName}</h4>\r\n              <h4>{element.email}</h4>\r\n            </div>\r\n            </Link>\r\n          )\r\n        })\r\n      }\r\n      <Outlet/>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,SAASC,IAAI,EAACC,MAAM,QAAQ,kBAAkB;AAAC;AAAA;AAE/C,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACvC;EACA,MAAM,CAACO,IAAI,EAACC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACrC,MAAM,CAACS,OAAO,EAACC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEzC;EACD;EACA;;EAGAC,SAAS,CAAC,MAAM;IAChB,eAAeU,OAAO,GAAG;MACxB,IAAG;QACH,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,iDAAgDR,KAAM,gBAAe,CAAC;QAE/F,MAAMS,GAAG,GAAG,MAAMF,GAAG,CAACG,IAAI,EAAE;QAC5BP,OAAO,CAACM,GAAG,CAAC;QACZE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChB,CAAC,QAAMI,GAAG,EAAC;QACTR,UAAU,CAACQ,GAAG,CAACC,OAAO,CAAC;QACvBH,OAAO,CAACC,GAAG,CAACC,GAAG,CAACC,OAAO,CAAC;MAC1B;IAED;IACAR,OAAO,EAAE;IACTS,QAAQ,CAACC,KAAK,GAAI,IAAGhB,KAAM,oBAAmB,CAAC,CAAC;EAEhD,CAAC,EAAC,CAACA,KAAK,CAAC,CAAC;EAEX,oBACE;IAAA,uBAGA;MAAA,wBAEG;QAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;QAAA,WAAC,WAAS,EAACA,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAU,eACtE;QAAQ,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;QAAA,WAAC,aAAW,EAACiB,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAU,EACvEb,OAAO,KAAI,EAAE,iBAAI;QAAA,UAAKA;MAAO;QAAA;QAAA;QAAA;MAAA,QAAM,EAGlCF,IAAI,IAAIA,IAAI,CAACgB,GAAG,CAAC,CAACC,OAAO,EAACC,KAAK,KAAG;QAChC,oBACE,QAAC,IAAI;UAAC,EAAE,EAAG,QAAOD,OAAO,CAACE,EAAG,EAAE;UAAA,uBAC/B;YAAK,SAAS,EAAC,MAAM;YAAA,wBACnB;cAAA,UAAKF,OAAO,CAACG;YAAS;cAAA;cAAA;cAAA;YAAA,QAAM,eAC5B;cAAA,UAAKH,OAAO,CAACI;YAAQ;cAAA;cAAA;cAAA;YAAA,QAAM,eAC3B;cAAA,UAAKJ,OAAO,CAACK;YAAK;cAAA;cAAA;cAAA;YAAA,QAAM;UAAA,GAHCJ,KAAK;YAAA;YAAA;YAAA;UAAA;QAI1B;UAAA;UAAA;UAAA;QAAA,QACC;MAEX,CAAC,CAAC,eAEJ,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EACL,iBACH;AAEP,CAAC;AAAA,GAzDKrB,IAAI;AAAA,KAAJA,IAAI;AA2DV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}